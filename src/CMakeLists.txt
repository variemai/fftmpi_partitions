cmake_minimum_required(VERSION 3.10)
set( CMAKE_VERBOSE_MAKEFILE on )
project(3DFFT_Bench_partitions DESCRIPTION "MPI FFT Library benchmark with different partitioning")
find_package(MPI REQUIRED COMPONENTS CXX)
message(STATUS "Run: ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ${MPI_C_COMPILER_INCLUDE_DIRS}")

add_executable(3dfft fft3d.cpp remap3d.cpp fft3d_wrap.cpp remap3d_wrap.cpp memory.cpp error.cpp bench.cpp)
#add_executable(2dfft fft2d.cpp remap2d.cpp fft2d_wrap.cpp remap2d_wrap.cpp memory.cpp error.cpp bench.cpp)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -Wall")
set(CMAKE_CXX_FLAGS_DEBUG "-g -DDEBUG -O3 -Wall")
option(SP "single precision" off)
if (SP)
    set(MY_COMPILE_FLAGS "-DFFT_SINGLE")
else()
    set(MY_COMPILE_FLAGS "-DFFT_DOUBLE")
endif()
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
   string(APPEND MY_COMPILE_FLAGS " -DDEBUG -O3 -Wall")
else()
   string(APPEND MY_COMPILE_FLAGS " -Wall -O3")
endif()

target_include_directories(3dfft PRIVATE ${MPI_C_INCLUDE_PATH})
target_compile_options(3dfft PRIVATE ${MPI_C_COMPILE_FLAGS} ${MY_COMPILE_FLAGS})
target_link_libraries(3dfft PRIVATE ${MPI_C_LIBRARIES} ${MPI_CXX_LINK_FLAGS})
target_include_directories(3dfft PRIVATE ${MPI_CXX_INCLUDE_PATH})
target_link_libraries(3dfft PRIVATE MPI::MPI_CXX)
# target_include_directories(2dfft PRIVATE ${MPI_C_INCLUDE_PATH})
# target_compile_options(2dfft PRIVATE ${MPI_C_COMPILE_FLAGS} ${MY_COMPILE_FLAGS})
# target_link_libraries(2dfft PRIVATE ${MPI_C_LIBRARIES} ${MPI_CXX_LINK_FLAGS})
message(STATUS "Compile Flags: ${MY_COMPILE_FLAGS}")
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
